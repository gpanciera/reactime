{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielajardimaquino/Desktop/ReactimeONTEST/reactime/tests/manual-tests/counterContextHooks/src/components/contact-form.js\";\nimport React, { useState, useContext } from \"react\";\nimport { Segment, Form, Input, Button } from \"semantic-ui-react\";\nimport _ from \"lodash\";\nimport { ContactContext } from \"../context/contact-context\";\nexport default function ContactForm() {\n  const name = useFormInput(\"\");\n  const email = useFormInput(\"\"); // eslint-disable-next-line no-unused-vars\n\n  const [state, dispatch] = useContext(ContactContext);\n\n  const onSubmit = () => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: {\n        id: _.uniqueId(10),\n        name: name.value,\n        email: email.value\n      }\n    }); // Reset Form\n\n    name.onReset();\n    email.onReset();\n  };\n\n  return /*#__PURE__*/React.createElement(Segment, {\n    basic: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    width: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, Object.assign({\n    placeholder: \"Enter Name\"\n  }, name, {\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Field, {\n    width: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, Object.assign({\n    placeholder: \"Enter Email\"\n  }, email, {\n    type: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Field, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fluid: true,\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"New Contact\")))));\n}\n\nfunction useFormInput(initialValue) {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleReset = () => {\n    setValue(\"\");\n  };\n\n  return {\n    value,\n    onChange: handleChange,\n    onReset: handleReset\n  };\n}","map":{"version":3,"sources":["/Users/gabrielajardimaquino/Desktop/ReactimeONTEST/reactime/tests/manual-tests/counterContextHooks/src/components/contact-form.js"],"names":["React","useState","useContext","Segment","Form","Input","Button","_","ContactContext","ContactForm","name","useFormInput","email","state","dispatch","onSubmit","type","payload","id","uniqueId","value","onReset","initialValue","setValue","handleChange","e","target","handleReset","onChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,mBAA7C;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,cAAT,QAA+B,4BAA/B;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,QAAMC,IAAI,GAAGC,YAAY,CAAC,EAAD,CAAzB;AACA,QAAMC,KAAK,GAAGD,YAAY,CAAC,EAAD,CAA1B,CAFoC,CAGpC;;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBZ,UAAU,CAACM,cAAD,CAApC;;AAEA,QAAMO,QAAQ,GAAG,MAAM;AACrBD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,EAAE,EAAEX,CAAC,CAACY,QAAF,CAAW,EAAX,CAAN;AAAsBT,QAAAA,IAAI,EAAEA,IAAI,CAACU,KAAjC;AAAwCR,QAAAA,KAAK,EAAEA,KAAK,CAACQ;AAArD;AAFF,KAAD,CAAR,CADqB,CAKrB;;AACAV,IAAAA,IAAI,CAACW,OAAL;AACAT,IAAAA,KAAK,CAACS,OAAN;AACD,GARD;;AAUA,sBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEN,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC;AAAnB,KAAoCL,IAApC;AAA0C,IAAA,QAAQ,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,eAIE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC;AAAnB,KAAqCE,KAArC;AAA4C,IAAA,IAAI,EAAC,OAAjD;AAAyD,IAAA,QAAQ,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAJF,eAOE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,OAAO,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAPF,CADF,CADF,CADF;AAmBD;;AAED,SAASD,YAAT,CAAsBW,YAAtB,EAAoC;AAClC,QAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBtB,QAAQ,CAACqB,YAAD,CAAlC;;AAEA,QAAME,YAAY,GAAGC,CAAC,IAAI;AACxBF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMO,WAAW,GAAG,MAAM;AACxBJ,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAFD;;AAIA,SAAO;AACLH,IAAAA,KADK;AAELQ,IAAAA,QAAQ,EAAEJ,YAFL;AAGLH,IAAAA,OAAO,EAAEM;AAHJ,GAAP;AAKD","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Segment, Form, Input, Button } from \"semantic-ui-react\";\nimport _ from \"lodash\";\nimport { ContactContext } from \"../context/contact-context\";\n\nexport default function ContactForm() {\n  const name = useFormInput(\"\");\n  const email = useFormInput(\"\");\n  // eslint-disable-next-line no-unused-vars\n  const [state, dispatch] = useContext(ContactContext);\n\n  const onSubmit = () => {\n    dispatch({\n      type: \"ADD_CONTACT\",\n      payload: { id: _.uniqueId(10), name: name.value, email: email.value }\n    })\n    // Reset Form\n    name.onReset();\n    email.onReset();\n  };\n\n  return (\n    <Segment basic>\n      <Form onSubmit={onSubmit}>\n        <Form.Group widths=\"3\">\n          <Form.Field width={6}>\n            <Input placeholder=\"Enter Name\" {...name} required />\n          </Form.Field>\n          <Form.Field width={6}>\n            <Input placeholder=\"Enter Email\" {...email} type=\"email\" required />\n          </Form.Field>\n          <Form.Field width={4}>\n            <Button fluid primary>\n              New Contact\n            </Button>\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    </Segment>\n  );\n}\n\nfunction useFormInput(initialValue) {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  }\n\n  const handleReset = () => {\n    setValue(\"\");\n  }\n\n  return {\n    value,\n    onChange: handleChange,\n    onReset: handleReset\n  };\n}\n"]},"metadata":{},"sourceType":"module"}