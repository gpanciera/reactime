{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielajardimaquino/Desktop/ReactimeONTEST/reactime/tests/manual-tests/counterContextHooks/src/components/contact-table.js\";\nimport React, { useState, useContext } from \"react\";\nimport { Segment, Table, Button, Icon } from \"semantic-ui-react\";\nimport { ContactContext } from \"../context/contact-context\";\nexport default function ContactTable() {\n  // Subscribe to `contacts` state and access dispatch function\n  const [state, dispatch] = useContext(ContactContext); // Declare a local state to be used internally by this component\n\n  const [selectedId, setSelectedId] = useState();\n\n  const delContact = id => {\n    dispatch({\n      type: \"DEL_CONTACT\",\n      payload: id\n    });\n  };\n\n  const onRemoveUser = () => {\n    delContact(selectedId);\n    setSelectedId(null); // Clear selection\n  };\n\n  const rows = state.contacts.map(contact => /*#__PURE__*/React.createElement(Table.Row, {\n    key: contact.id,\n    onClick: () => setSelectedId(contact.id),\n    active: contact.id === selectedId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, contact.id), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, contact.name), /*#__PURE__*/React.createElement(Table.Cell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, contact.email)));\n  return /*#__PURE__*/React.createElement(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    celled: true,\n    striped: true,\n    selectable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Id\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Email\"))), /*#__PURE__*/React.createElement(Table.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, rows), /*#__PURE__*/React.createElement(Table.Footer, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n    colSpan: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    floated: \"right\",\n    icon: true,\n    labelPosition: \"left\",\n    color: \"red\",\n    size: \"small\",\n    disabled: !selectedId,\n    onClick: onRemoveUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), \" Remove User\"))))));\n}","map":{"version":3,"sources":["/Users/gabrielajardimaquino/Desktop/ReactimeONTEST/reactime/tests/manual-tests/counterContextHooks/src/components/contact-table.js"],"names":["React","useState","useContext","Segment","Table","Button","Icon","ContactContext","ContactTable","state","dispatch","selectedId","setSelectedId","delContact","id","type","payload","onRemoveUser","rows","contacts","map","contact","name","email"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Segment, Table, Button, Icon } from \"semantic-ui-react\";\nimport { ContactContext } from \"../context/contact-context\";\n\nexport default function ContactTable() {\n  // Subscribe to `contacts` state and access dispatch function\n  const [state, dispatch] = useContext(ContactContext);\n  // Declare a local state to be used internally by this component\n  const [selectedId, setSelectedId] = useState();\n\n  const delContact = id => {\n    dispatch({\n      type: \"DEL_CONTACT\",\n      payload: id\n    });\n  };\n\n  const onRemoveUser = () => {\n    delContact(selectedId);\n    setSelectedId(null); // Clear selection\n  };\n\n  const rows = state.contacts.map(contact => (\n    <Table.Row\n      key={contact.id}\n      onClick={() => setSelectedId(contact.id)}\n      active={contact.id === selectedId}\n    >\n      <Table.Cell>{contact.id}</Table.Cell>\n      <Table.Cell>{contact.name}</Table.Cell>\n      <Table.Cell>{contact.email}</Table.Cell>\n    </Table.Row>\n  ));\n\n  return (\n    <Segment>\n      <Table celled striped selectable>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Id</Table.HeaderCell>\n            <Table.HeaderCell>Name</Table.HeaderCell>\n            <Table.HeaderCell>Email</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>{rows}</Table.Body>\n        <Table.Footer fullWidth>\n          <Table.Row>\n            <Table.HeaderCell />\n            <Table.HeaderCell colSpan=\"4\">\n              <Button\n                floated=\"right\"\n                icon\n                labelPosition=\"left\"\n                color=\"red\"\n                size=\"small\"\n                disabled={!selectedId}\n                onClick={onRemoveUser}\n              >\n                <Icon name=\"trash\" /> Remove User\n              </Button>\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Footer>\n      </Table>\n    </Segment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}